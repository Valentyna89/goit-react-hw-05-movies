{"version":3,"file":"static/js/234.ede571ec.chunk.js","mappings":"2NACA,EAAkC,iCAAlC,EAAkF,8BAAlF,EAA6H,4BAA7H,EAAyK,+B,SC6BzK,EAzBgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWH,GACRI,KAAKL,GACLM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACN,KAGF,eAAIS,UAAWC,EAAf,SACGZ,GACCA,EAAQa,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,gBAAaL,UAAWC,EAAxB,WACE,eAAGD,UAAWC,EAAd,qBAAyCG,EAAzC,QACA,cAAGJ,UAAWC,EAAd,SAAkCI,MAF3BF,EAKZ,KAGR,C,+LC1BKG,EAAW,+BACXC,EAAU,mCAEHC,EAAiB,mCAAG,6GAAOC,EAAP,+BAAc,EAAd,kBAENC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,uCACqBC,EADrB,iBACqCE,IAH/B,uBAErBE,EAFqB,EAErBA,KAGFC,EAAiBD,EAAKE,QALC,kBAOtBD,GAPsB,kCAS7Bd,QAAQD,MAAR,MAT6B,0DAAH,qDAajBiB,EAAY,mCAAG,WAAMX,GAAN,kGAEDO,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAH,EADA,oBACcI,EADd,oBAFC,uBAEhBI,EAFgB,EAEhBA,KAFgB,kBAMjBA,GANiB,gCAQxBb,QAAQD,MAAR,MARwB,yDAAH,sDAYZkB,EAAO,mCAAG,WAAMZ,GAAN,kGAEIO,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAH,EADA,4BACsBI,EADtB,oBAFJ,uBAEXI,EAFW,EAEXA,KAFW,kBAKZA,EAAKK,MALO,gCAOnBlB,QAAQD,MAAR,MAPmB,yDAAH,sDAWPH,EAAU,mCAAG,WAAMS,GAAN,kGAECO,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAH,EADA,4BACsBI,EADtB,2BAFD,uBAEdI,EAFc,EAEdA,KAFc,kBAKfA,EAAKE,SALU,gCAOtBf,QAAQD,MAAR,MAPsB,yDAAH,sDAWVoB,EAAgB,mCAAG,WAAOC,GAAP,gGAAeT,EAAf,+BAAsB,EAAtB,kBAELC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iCACeC,EADf,kBACgCW,EADhC,iBAC+CT,EAD/C,qBAFK,uBAEpBE,EAFoB,EAEpBA,KAGFE,EAAUF,EAAKE,QALO,kBAOrBA,GAPqB,kCAS5Bf,QAAQD,MAAR,MAT4B,0DAAH,qD","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewContainer\":\"Reviews_reviewContainer__tMkPK\",\"authorReview\":\"Reviews_authorReview__P8Uhj\",\"reviewItem\":\"Reviews_reviewItem__ax7Fo\",\"reviewContent\":\"Reviews_reviewContent__oX1fD\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from '../../services/api';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviews(movieId)\n      .then(setReviews)\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <ul className={css.reviewContainer}>\n      {reviews &&\n        reviews.map(({ id, author, content }) => {\n          return (\n            <li key={id} className={css.reviewItem}>\n              <p className={css.authorReview}>Author: {author} </p>\n              <p className={css.reviewContent}>{content}</p>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '6032bd49d9b9d4473281ff3897c51bb3';\n\nexport const getTrendingMovies = async (page = 1) => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`\n    );\n    const trendingMovies = data.results;\n\n    return trendingMovies;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieById = async id => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getCast = async id => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieBySearch = async (search, page = 1) => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${search}&page=${page}&languages=en-US`\n    );\n    const results = data.results;\n\n    return results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","then","catch","error","console","log","className","css","map","id","author","content","BASE_URL","API_KEY","getTrendingMovies","page","axios","data","trendingMovies","results","getMovieById","getCast","cast","getMovieBySearch","search"],"sourceRoot":""}